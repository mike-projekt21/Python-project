import sqlite3

conn = sqlite3.connect('schedule.db')
cur = conn.cursor()

# Чтобы данные не добавлялись повторно при запуске программы
cur.execute("DROP TABLE IF EXISTS courses_description")
cur.execute("DROP TABLE IF EXISTS filials")
cur.execute("DROP TABLE IF EXISTS courses")
cur.execute("DROP TABLE IF EXISTS schedule")

cur.execute("PRAGMA foreign_keys=on")

# Создание таблиц
cur.execute("CREATE TABLE IF NOT EXISTS courses_description (id_cours INT NOT NULL PRIMARY KEY, "
            "name CHAR(50), class CHAR(5), description CHAR)")

cur.execute("CREATE TABLE IF NOT EXISTS filials (id_filial INT NOT NULL PRIMARY KEY, name CHAR(50))")

cur.execute("CREATE TABLE IF NOT EXISTS courses (id_subject INT NOT NULL PRIMARY KEY, id_cours INT NOT NULL, "
            "id_filial INT NOT NULL, "
            "FOREIGN KEY (id_cours) REFERENCES courses_description (id_cours) ON UPDATE CASCADE, "
            "FOREIGN KEY (id_filial) REFERENCES filials (id_filial) ON UPDATE CASCADE)")

cur.execute("CREATE TABLE IF NOT EXISTS schedule (id_subject INT NOT NULL, day CHAR(15), time CHAR(20), "
            "FOREIGN KEY (id_subject) REFERENCES courses (id_subject) ON UPDATE CASCADE)")

# Вставка данных
filials = ((1, "Технопарк (Нарвская)"),
           (2, "Технопарк (Бауманская)")
)
for i in filials:
    cur.execute("insert into filials values (?, ?)", i)

des1 = "Вводный курс по основам программирования на Python. В рамках данного курса учащиеся знакомятся с одним из самых" \
       " популярных языков программирования 21 века, подробно изучают синтаксис языка, а также знакомятся с правилами " \
       "создания программного кода и развивают логическое мышление.\n\nЯдром данного курса является Python - отличный старт " \
       "для тех, кто только начинает свой путь программиста. Несмотря на свою простоту, Python явялется одним из самых " \
       "быстро развивающихся языков мира по причине своей многофункциональности.\n\nУчащиеся данного курса последовательно " \
       "изучат синтаксис и архитектуру Python, его особенности и возможности. Затем познакомятся с популярными алгоритмами " \
       "на примере решения часто встречающихся в жизни программиста задач, а также освоят правила написания грамотного " \
       "кода в соответствии с мировыми стандартами. \n\nТематический план курса Основы языка Python. Контейнеры. Функции. " \
       "Классы и ООП. Алгоритмы и структуры данных. Базы данных. CLI приложения. Git и GitHub. Модальность и сторонние " \
       "библиотеки.. Виртуальные окружения."

des2 = "Курс по программированию на Python обучает основам программирования, а также знакомит с современными " \
       "информационными технологиями и инструментами разработки. В рамках курса учащиеся узнают о том, как создавать " \
       "CLI и десктопные приложения, а также получат базовые навыки веб-программирования и мобильной разработки. За " \
       "основу данного курса взят популярнейший язык программирования Python, использующийся в самых различных областях " \
       "науки и техники.\n\nРазработка на Python отличается своей простотой и понятностью по причине элементарного " \
       "синтаксиса и больших возможностей языка. Учащиеся данного курса последовательно пройдут путь от освоения синтаксиса " \
       "языка, особенностей структурирования и классификации задач и грамотной декомпозиции кода до написания " \
       "многофункциональных приложений. Учащиеся получат гибкий набор инструментов, масштабиремый на любые решения. " \
       "Учащиеся познакомятся со следующими библиотеками и популярными фреймворками: „re“ - регулярные выражения; " \
       "„sqlite3“ - компактная встраиваемая СУБД: „pandas“ - гибкая библиотека обработки данных;„requests“ и „scoket“ - " \
       "парсинг данных с веб-страниц и обработка HTTP запросов; „Django“ и „Flask“ - одни из самых мощных фрейморков для " \
       "web-разработки; „Kivy“ - мобильная разработка.\n\nТематический план курса включает следующие темы: Основы языка " \
       "Python. Контейнеры. Изучение возможностей и синтаксиса Python.\n\nИзучение инструментария. Функции. Классы и " \
       "объектно-ориентированное программирование (ООП). Алгоритмы и структуры данных. Хранение данных. Изучение баз " \
       "данных. Анализ кода и извлечение данных. Парсинг данных. Разработка web-приложения. Проектирование REST API. " \
       "Мобильная разработка."

des3 = ""

des4 = "С++ является фундаментальным и многофункциональным языком, поддерживающим современное обьектно-ориентированное " \
       "программирование для решения любых задач. Он подходит как для создания компьютерных программ, так и для работы " \
       "в области робототехники. Ввиду своей универсальности этот язык очень популярен в ВУЗах и считается той базой, " \
       "которую должен знать хороший программист. В рамках курса учащиеся узнают, как создавать консольные и оконные " \
       "приложения, познакомятся с современными подходами в программировании и алгоритмизации. Учащиеся изучат структуры " \
       "данных: несвязанные, с явными и неявными связями. Учащиеся разработают оконные приложения с использованием популярного " \
       "фреймворка QT, где можно создавать удобный графический интерфейс, анимацию и игры.\n\nТематический план включает " \
       "следующие темы: Основы языка программирования С++. Работа с массивами и строками. Работа с подпрограммами. " \
       "Основы объектно-ориентированного программирования (ООП). Знакомство с библиотекам STL. Знакомтво со средой " \
       "разработки Qt Creator. Создание оконных приложений. Инженерный бизнес менеджмент. Работа с растровой графикой QT. " \
       "Создание простейшей игры"

des5 = "Язык гипертекстовой разметки HTML - основа курса, он используется для базовой верстки большинства современных " \
       "сайтов. В ходе прохождения курса, ученики познакомятся с основами HTML, CSS, научатся создавать дизайн страниц " \
       "с использованием дополнительных фреймворков, анимацию с использованием специальных библиотек и графических полей, " \
       "интерактивные компоненты на веб-странице, обрабатывать пользовательские данные и работать с инструментами веб-разработчика." \
       "\n\nПрохождение данного курса полноценно подготовит учащихся к освоению языка программирования Javascript для " \
       "создания web-приложений.\n" \
       "Ознакомиться с планом курса вы можете на нашем главном сайте https://inginirium.ru"

courses_description = ((1, "Программирование на Python", "5-8", des1),
            (2, "Программирование на Python", "9-11", des2),
            (3, "Основы программирования на C++", "5-8", "Пока информация отсутствует"),
            (4, "Основы программирования на C++", "9-11", des4),
            (5, "Веб-программирование", "5-8", des5)
)

for i in courses_description:
    cur.execute("insert into courses_description values (?, ?, ?, ?)", i)

courses = (
    (1, 1, 1),
    (2, 1, 2),
    (3, 2, 2),
    (4, 3, 2),
    (5, 4, 2),
    (6, 5, 2),
)
for i in courses:
    cur.execute("insert into courses values (?, ?, ?)", i)

schedule = (
    (1, "Суббота", "12:00-13:45"),
    (1, "Воскресенье", "16:00-17:45"),
    (2, "Воскресенье", "14:00-15:45"),
    (3, "Среда", "18:00-19:45"),
    (3, "Воскресенье", "18:00-19:45"),
    (4, "Воскресенье", "12:00-13:45\n16:00-17:45"),
    (5, "Субббота", "14:00-15:45\n18:00-19:45"),
    (6, "Четверг", "16:00-17:45"),
    (6, "Воскресенье", "10:00-11:45\n14:00-15:45"),
)
for i in schedule:
    cur.execute("insert into schedule values (?, ?, ?)", i)


# # # Выборка данных
# cur.execute("SELECT * FROM filials")
# rows = cur.fetchall()
# for row in rows:
#     print(row)
# print()
# cur.execute("SELECT * FROM courses_description")
# rows = cur.fetchall()
# for row in rows:
#     print(row)
# print()
# cur.execute("SELECT * FROM courses")
# rows = cur.fetchall()
# for row in rows:
#     print(row)
# print()
# cur.execute("SELECT * FROM schedule")
# rows = cur.fetchall()
# for row in rows:
#     print(row)

conn.commit()
conn.close()